{"version":3,"sources":["app/Layout/styles.ts","app/Layout/AppBarTta/AppBarTta.tsx","app/Layout/AppBarTta/styles.ts","app/Layout/DrawerTta/DrawerTta.tsx","app/Layout/DrawerTta/styles.ts","app/Layout/theme/index.ts","app/Layout/Layout.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["toolbar","theme","Object","objectSpread","display","flex","alignItems","justifyContent","padding","mixins","withStyles","createStyles","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","concat","enteringScreen","menuButton","marginRight","hide","_ref","classes","handleDrawerOpen","open","react_default","a","createElement","index_es","position","className","classNames","defineProperty","elevation","disableGutters","color","aria-label","onClick","Menu_default","variant","noWrap","style","flexGrow","AccountCircle_default","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","unit","breakpoints","up","divider","background","listItemIcon","listItemText","withTheme","_classNames","_classNames2","handleDrawerClose","paper","root","direction","ChevronRight_default","ChevronLeft_default","text","Icon","VerticalSplitIcon","key","ErrorOutlineIcon","AirportShuttleIcon","TrackChangesIcon","map","_ref2","button","primary","BusinessIcon","CommuteIcon","GestureIcon","_ref3","NearMeIcon","_ref4","createMuiTheme","@media (min-width:600px)","minHeight","palette","light","main","dark","contrastText","secondary","typography","fontSize","overrides","MuiToolbar","borderBottom","MuiDivider","MuiDrawer","backgroundImage","content","children","_useState","useState","_useState2","slicedToArray","setOpen","styles","Layout_AppBarTta_AppBarTta","Layout_DrawerTta_DrawerTta","App","app_Layout_Layout","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f84e4d81.chunk.js","sourcesContent":["import {Theme, createStyles} from \"@material-ui/core\";\n\nexport default (theme: Theme) => createStyles({\n    root: {\n        display: 'flex',\n    },\n    ...toolbar(theme),\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n    },\n});\n\nconst drawerWidth = 240;\nconst toolbar = (theme: Theme) => ({\n    toolbar: {\n        display: 'flex',\n        flex: 'none',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    }\n});\n\nexport {drawerWidth, toolbar};","import classNames from 'classnames';\nimport {AppBar, IconButton, Theme, Toolbar, Typography, withStyles, WithStyles} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport React, {FunctionComponent} from 'react';\nimport styles from './styles';\n\nconst AppBarTta: FunctionComponent<Props> = function ({classes, handleDrawerOpen, open}) {\n    return (\n        <AppBar\n            position=\"fixed\"\n            className={classNames(classes.appBar, {\n                [classes.appBarShift]: open,\n            })}\n            elevation={0}\n        >\n            <Toolbar disableGutters={!open}>\n                <IconButton\n                    color=\"inherit\"\n                    aria-label=\"Open drawer\"\n                    onClick={handleDrawerOpen}\n                    className={classNames(classes.menuButton, {\n                        [classes.hide]: open,\n                    })}\n                >\n                    <MenuIcon/>\n                </IconButton>\n                <Typography variant=\"h6\" color=\"inherit\" noWrap style={{flexGrow: 1}}>\n                    Mini variant drawer\n                </Typography>\n                <IconButton>\n                    <AccountCircleIcon/>\n                </IconButton>\n            </Toolbar>\n        </AppBar>\n    )\n};\n\n\ninterface Props extends WithStyles<typeof styles> {\n    handleDrawerOpen: () => void,\n    open: boolean\n}\n\nexport default withStyles(styles)(AppBarTta);","import {Theme, createStyles} from \"@material-ui/core\";\nimport {drawerWidth} from '../styles';\n\nexport default (theme: Theme) => createStyles({\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginLeft: 12,\n        marginRight: 36,\n    },\n    hide: {\n        display: 'none',\n    },\n});\n","import classNames from 'classnames';\nimport {\n    Divider,\n    Drawer,\n    IconButton,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText, ListSubheader, Theme, Typography,\n    WithStyles,\n    withStyles\n} from '@material-ui/core';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport AirportShuttleIcon from '@material-ui/icons/AirportShuttle';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport TrackChangesIcon from '@material-ui/icons/TrackChanges';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport GestureIcon from '@material-ui/icons/Gesture';\nimport CommuteIcon from '@material-ui/icons/Commute';\nimport VerticalSplitIcon from '@material-ui/icons/VerticalSplit';\nimport NearMeIcon from '@material-ui/icons/NearMe';\nimport React, {FunctionComponent} from 'react';\nimport styles from './styles';\n\nconst DrawerTta: FunctionComponent<Props> = function ({classes, theme, handleDrawerClose, open}) {\n    return (<Drawer\n        variant=\"permanent\"\n        className={classNames(classes.drawer, {\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n        })}\n        classes={{\n            paper: classNames({\n                [classes.drawerOpen]: open,\n                [classes.drawerClose]: !open,\n            }),\n        }}\n        open={open}\n    >\n        <div className={classes.toolbar}>\n            <IconButton onClick={handleDrawerClose} classes={{root: classes.listItemIcon}}>\n                {theme.direction === 'rtl' ? <ChevronRightIcon/> : <ChevronLeftIcon/>}\n            </IconButton>\n        </div>\n        <Divider className={classes.divider}/>\n        <List>\n            {[\n                {text: 'Rozkłady', Icon: VerticalSplitIcon, key: 'timetable'},\n                {text: 'Utrudnienia', Icon: ErrorOutlineIcon, key: 'impediment'},\n                {text: 'Przewoźnicy', Icon: AirportShuttleIcon, key: 'carrier'},\n                {text: 'Zgubione', Icon: TrackChangesIcon, key: 'lostAndFound'}\n            ].map(({text, Icon, key}) => (\n                <ListItem button key={text}>\n                    <ListItemIcon classes={{root: classes.listItemIcon}}><Icon/></ListItemIcon>\n                    <ListItemText primary={text} classes={{primary: classes.listItemText}}/>\n                </ListItem>\n            ))}\n        </List>\n        <Divider className={classes.divider}/>\n        <List>\n            {open && (<ListSubheader classes={{root: classes.listItemIcon}}>Właściciel firmy</ListSubheader>)}\n            {[\n                {text: 'Moje firmy', Icon: BusinessIcon, key: 'company'},\n                {text: 'Pojazdy', Icon: CommuteIcon, key: 'vehicle'},\n                {text: 'Linie', Icon: GestureIcon, key: 'line'},\n                {text: 'Rozkłady', Icon: VerticalSplitIcon, key: 'timetable'}\n            ].map(({text, Icon, key}) => (\n                <ListItem button key={text}>\n                    <ListItemIcon classes={{root: classes.listItemIcon}}><Icon/></ListItemIcon>\n                    <ListItemText primary={text} classes={{primary: classes.listItemText}}/>\n                </ListItem>\n            ))}\n        </List>\n        <Divider className={classes.divider}/>\n        <List>\n            {open && (<ListSubheader classes={{root: classes.listItemIcon}}>Administrator</ListSubheader>)}\n            {[\n                {text: 'Firmy', Icon: BusinessIcon, key: 'company'},\n                {text: 'Miejsca', Icon: NearMeIcon, key: 'place'},\n            ].map(({text, Icon, key}) => (\n                <ListItem button key={text}>\n                    <ListItemIcon classes={{root: classes.listItemIcon}}><Icon/></ListItemIcon>\n                    <ListItemText primary={text} classes={{primary: classes.listItemText}}/>\n                </ListItem>\n            ))}\n        </List>\n    </Drawer>)\n};\n\ninterface Props extends WithStyles<typeof styles> {\n    handleDrawerClose: () => void,\n    open: boolean,\n    theme: Theme\n}\n\nexport default withStyles(styles, {withTheme: true})(DrawerTta);\n","import {Theme, createStyles} from \"@material-ui/core\";\nimport {drawerWidth, toolbar} from '../styles';\n\nexport default (theme: Theme) => createStyles({\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing.unit * 7 + 1,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing.unit * 8 + 1,\n        },\n    },\n    divider: {\n        background: '#101025'\n    },\n    listItemIcon: {\n        color: '#d8d8d8'\n    },\n    listItemText: {\n        color: '#fff'\n    },\n    ...toolbar(theme),\n});\n","import {createMuiTheme} from '@material-ui/core';\n\nexport default createMuiTheme({\n    mixins: {\n        toolbar: {\n            '@media (min-width:600px)': {\n                minHeight: 56\n            }\n        }\n    },\n    palette: {\n        primary: {\n            light: '#3e50a2',\n            main: '#292f72',\n            dark: '#202047',\n            contrastText: '#fff'\n        },\n        secondary: {\n            light: '#d52b28',\n            main: '#ba1a15',\n            dark: '#9e1a15',\n            contrastText: '#fff'\n        }\n    },\n    typography: {\n        fontSize: 12\n    },\n    overrides: {\n        MuiToolbar: {\n            root: {\n                color: '#3f3f3f',\n                background: '#fff',\n                borderBottom: '1px solid #d8d8d8'\n            }\n        },\n        MuiDivider: {\n            root: {\n                background: '#d8d8d8'\n            }\n        },\n        MuiDrawer: {\n            paper: {\n                background: '#202047',\n                backgroundImage: 'linear-gradient(#202047, #131325)'\n            }\n        }\n    }\n});","import React, {FunctionComponent, useState} from 'react';\nimport {\n    WithStyles,\n    withStyles,\n    CssBaseline,\n    MuiThemeProvider,\n} from '@material-ui/core';\nimport styles from './styles'\nimport AppBarTta from './AppBarTta';\nimport DrawerTta from './DrawerTta';\nimport theme from './theme';\n\nconst Layout: FunctionComponent<Props> = function Layout({classes, children}) {\n    const [open, setOpen] = useState(true);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <MuiThemeProvider theme={theme}>\n            <div className={classes.root}>\n                <CssBaseline/>\n                <AppBarTta handleDrawerOpen={handleDrawerOpen} open={open}/>\n                <DrawerTta handleDrawerClose={handleDrawerClose} open={open}/>\n                <main className={classes.content}>\n                    <div className={classes.toolbar}/>\n                    {children}\n                </main>\n            </div>\n        </MuiThemeProvider>\n    );\n};\n\ntype Props = WithStyles<typeof styles>;\n\nexport default withStyles(styles, {withTheme: true})(Layout);","import React, { Component } from 'react';\nimport Layout from './app/Layout';\n\nclass App extends Component {\n  render() {\n    return (\n      <Layout/>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}